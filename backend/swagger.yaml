openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jeraldlyh/HoloRPG/1.0.0
info:
  description: 'List of API endpoints available'
  version: '1.0.0'
  title: HoloRPG API
  contact:
    email: jeraldssw@gmail.com
tags:
  - name: admins
    description: Secured calls for admin only
  - name: users
    description: Operations available to authenticated users
paths:
  /api/auth/social/google/:
    post:
      tags:
        - users
      summary: Login/Registration (Google Provider)
      operationId: loginGoogle
      parameters:
        - in: query
          name: username
          required: true
          schema:
            type: string
        - in: query
          name: password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Token'
  /api/auth/login/:
    post:
      tags:
        - users
      summary: Login (Django Authentication)
      operationId: loginDjango
      parameters:
        - in: query
          name: username
          required: true
          schema:
            type: string
        - in: query
          name: password
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Token'
  /api/auth/logout/:
    post:
      tags:
        - users
      summary: Logout user
      operationId: logout
      parameters:
        - in: query
          name: refresh
          required: true
          description: Refresh token
          schema:
            type: string
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    default: Successfully logged out
  /api/auth/token/refresh/:
    post:
      tags:
        - users
      summary: Refresh access token
      operationId: refreshToken
      parameters:
        - in: query
          name: refresh
          required: true
          description: Refresh token
          schema:
            type: string
      responses:
        '200':
          description: Successfully obtained a new access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  access_token_expiration:
                    type: string
                    format: date-time
  /api/profile:
    get:
      tags:
        - users
      summary: Get all profiles
      operationId: getAllProfiles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieve list of profiles on the server
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/UserProfile'
  /api/profile/{id}:
    get:
      tags:
        - users
      summary: Get profile by username
      operationId: getProfile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Username
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieve list of profiles on the server
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/UserProfile'
# ---------------------------------------------------------------------------- #
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Token:
      type: object
      properties: 
        access_token:
          type: string
        refresh_token:
          type: string
        user: 
          type: object
          properties:
            pk:
              type: string
            username:
              type: string
            email:
              type: string
    Character:
      type: object
      required:
        - main_class
      properties:
        main_class:
          type: string
          default: DEFAULT
          maxLength: 32
    UserProfile:
      type: object
      required:
        - username
        - email
        - password
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          maxLength: 254
        username:
          type: string
        is_staff:
          type: boolean
          default: false
        is_superuser:
          type: boolean
          default: false
        is_active:
          type: boolean
          default: false
        last_login:
          type: string
          format: date-time
        date_joined:
          type: string
          format: date-time
        has_changed_name:
          type: boolean
          default: false
        image:
          type: string
          maxLength: 100
        character:
          '$ref': '#/components/schemas/Character'
        level:
          type: integer
          default: 1
        experience:
          type: integer
          default: 0
        currency:
          type: integer
          default: 1000
        reputation:
          type: integer
          default: 0
        current_health:
          type: integer
          default: 100
        max_health:
          type: integer
          default: 100
        attack:
          type: integer
          default: 1
        defence:
          type: integer
          default: 1
        status:
          type: string
          maxLength: 10
    Relationship:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          maxLength: 10
          enum:
            - Friend
            - Family
    UserRelationship:
      type: object
      required:
        - user_from
        - user_to
        - relationship
      properties:
        user_from:
          '$ref': '#/components/schemas/UserProfile'
        user_to:
          '$ref': '#/components/schemas/UserProfile'
        relationship:
          '$ref': '#/components/schemas/Relationship'
    Bounty:
      type: object
      required:
        - placed_by
        - target
        - value
      properties:
        id:
          type: string
          format: uuid
        placed_by:
          '$ref': '#/components/schemas/UserProfile'
        target:
          '$ref': '#/components/schemas/UserProfile'
        value:
          type: integer
        placed_at:
          type: string
          format: date-time
          nullable: true
        claimed_by:
          '$ref': '#/components/schemas/UserProfile'
        status:
          type: string
          maxLength: 10
          enum:
            - CLAIMED
            - UNCLAIMED